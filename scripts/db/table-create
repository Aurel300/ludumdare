#!/usr/bin/env php
<?php
require_once __DIR__."/../../db.php";
require_once __DIR__."/../../core/internal/core.php";
require_once __DIR__."/../../core/config.php";

if (posix_getuid() != 0) {
    error_log("Error: Requires root");
    exit(1);
}

array_shift($argv);
foreach ($argv as $value) {
	$table_list[$value]=true;
}

print "\n*** WARNING ***\n\n";
if (isset($table_list)) {
	print "You are about to create/update the following table(s):\n";
	print implode(", ",$argv)."\n";
}
else {
	print "You are about to create/update ALL tables.\n";
}
print "\nAre you sure [type 'YES']? ";
flush();
$input = trim(fgets(STDIN));
if ( $input != "YES" ) {
	print "Aborting...\n";
	exit(1);
}

print "\n";

// Normally Connect isn't required, but done here to confirm existence of DB //
db_Connect();
if ( !db_IsConnected() ) {
	print "Failed to connect to Database. Retrying as server only...";
	
	db_ConnectOnly();

	if ( !db_IsConnected() ) {
		db_Log("Failed to connect to Server");
		exit(1);
	}
	
	print "Connected.\n";

	// If database doesn't exist, create it //
	if ( !db_DatabaseExists(CMW_DB_NAME) ) {
		db_Query("CREATE DATABASE IF NOT EXISTS ?;",CMW_DB_NAME);
		print("Database '".CMW_DB_NAME."' created.\n");
	
		// Reconnect //
		db_Close();
		db_Connect();
	
		if ( !db_IsConnected() ) {
			db_Log("Failed to reconnect to Database '".CMW_DB_NAME."'");
			exit(1);
		}
		
		print "Reconnected.\n";
	}
}

// NOTE: utf8 is 3 byte unicode. utf8mb4 is 4 byte. Required for Emoji.
const DEFAULT_CS_ENGINE = " CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ENGINE=InnoDB";
global $CONFIG, $version, $old_version;

// Load Configuration //
config_Load();


function DoInit($table) {
	global $CONFIG, $version, $old_version;
	
	print "* ".$table."\n";
	$version = isset($CONFIG[$table])?intval($CONFIG[$table]):0;
	$old_version = $version;	
}
function DoCreate( $table, ...$args ) {
	$ret = db_Query( ...$args );
	if ( $ret )
		print $table." created\n";
	else
		print "Error creating ".$table."\n";
	return $ret;
}
function DoExit($table) {
	global $CONFIG, $version, $old_version;
	
	if ( config_Set($table,strval($version)) ) {
		print $table." upgraded (version ".$old_version." -> ".$version.")\n";	
	}
}


// Create/Upgrade Table //
$table = CMW_TABLE_CONFIG;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				`key` VARCHAR(64) CHARSET latin1 NOT NULL DEFAULT '',
					INDEX(`key`),
				`value` VARCHAR(128) NOT NULL DEFAULT '',
				`timestamp` DATETIME NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	case 1:
		// Oops! I forgot to remove this test that bumped the version number.
		// Therefor, config actually starts at version 2
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
	
	$DIFF_CONFIG = array_diff_key(DEFAULT_CONFIG,$CONFIG);
	$DIFF_CONFIG_COUNT = count($DIFF_CONFIG);
	if ( $DIFF_CONFIG_COUNT > 0 ) {
		print "Adding ".$DIFF_CONFIG_COUNT." missing element(s) to ".$table."\n";
		
		foreach ( $DIFF_CONFIG as $key => $value ) {
			print "  * ".$key." = ".(is_string($value)?("\"".$value."\"\n"):($value."\n"));
			config_Set($key,$value);
		}
	}
	
	$DIFF_CONFIG = array_diff_key($CONFIG,DEFAULT_CONFIG);
	$DIFF_CONFIG_COUNT = count($DIFF_CONFIG);
	if ( $DIFF_CONFIG_COUNT > 0 ) {
		print "NOTE: There are ".$DIFF_CONFIG_COUNT." element(s) not found in DEFAULT_CONFIG\n";
		
		foreach ( $DIFF_CONFIG as $key => $value ) {
			print "  * ".$key." = ".(is_string($value)?("\"".$value."\"\n"):($value."\n"));
		}
	}
}


// Create/Upgrade Table //
$table = CMW_TABLE_THEME_IDEA;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				theme VARCHAR(64) NOT NULL,
				`timestamp` DATETIME NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	case 1:
		$ok = DoCreate( $table,
			"ALTER TABLE ".$table."
				ADD COLUMN parent BIGINT UNSIGNED NOT NULL,
				ADD INDEX (parent)
			;");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	case 2:
		$ok = DoCreate( $table,
			"ALTER TABLE ".$table."
				ADD COLUMN score DOUBLE NOT NULL,
				ADD INDEX (score)
			;");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_LEGACY_USER;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL 
					UNIQUE,
				`hash` VARCHAR(128) CHARSET latin1 NOT NULL,
				`timestamp` DATETIME NOT NULL,
				num_events INT UNSIGNED NOT NULL,
				gravatar VARCHAR(32) CHARSET latin1 NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}



// Create/Upgrade Table //
// NOTE: E-mail addresses are using UTF8mb3 encoding, meaning emoji domains and addresses aren't supported.
$table = CMW_TABLE_USER;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				node BIGINT UNSIGNED NOT NULL UNIQUE,
				mail VARCHAR(255) CHARSET utf8 COLLATE utf8_unicode_ci NOT NULL UNIQUE,
				hash VARCHAR(255) CHARSET latin1 NOT NULL,
				timestamp TIMESTAMP NOT NULL,
				secret VARCHAR(128) CHARSET latin1 NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}

// Create/Upgrade Table //
$table = CMW_TABLE_USER_ACCESS;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				ip VARBINARY(16) NOT NULL,
					INDEX(ip),
					UNIQUE `user_ip` (user,ip),
				first_timestamp DATETIME NOT NULL,
				last_timestamp DATETIME NOT NULL,
				total BIGINT UNSIGNED NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_USER_STRIKE;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				node BIGINT UNSIGNED NOT NULL,
				reason TEXT NOT NULL,
				timestamp DATETIME NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_THEME_IDEA_VOTE;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
					UNIQUE `user_node` (user,node),
				timestamp DATETIME NOT NULL,
				value INT NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	case 1:
		$ok = DoCreate( $table,
			"ALTER TABLE ".$table."
				ADD INDEX (value)
			;");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_THEME_VOTE;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
					UNIQUE `user_node` (user,node),
				timestamp DATETIME NOT NULL,
				value INT NOT NULL,
					INDEX (value)
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_THEME;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL
					UNIQUE,
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
				theme VARCHAR(64) NOT NULL,
				`timestamp` DATETIME NOT NULL,
				page INT UNSIGNED NOT NULL,
				score DOUBLE NOT NULL,
					INDEX (score)
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}

// Create/Upgrade Table //
$table = CMW_TABLE_THEME_FINAL;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL
					UNIQUE,
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
				theme VARCHAR(64) NOT NULL,
				score DOUBLE NOT NULL,
					INDEX (score)
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}

// Create/Upgrade Table //
$table = CMW_TABLE_THEME_FINAL_VOTE;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				user BIGINT UNSIGNED NOT NULL,
					INDEX(user),
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
					UNIQUE `user_node` (user,node),
				timestamp DATETIME NOT NULL,
				value INT NOT NULL,
					INDEX (value)
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}

// Create/Upgrade Table //
$table = CMW_TABLE_THEME_HISTORY;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				node BIGINT UNSIGNED NOT NULL,
				shorthand VARCHAR(20) CHARSET latin1 NOT NULL,
				name VARCHAR(64) NOT NULL,
				theme VARCHAR(64) NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_NODE;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				parent BIGINT UNSIGNED NOT NULL,
					INDEX(parent),
				type VARCHAR(24) CHARSET latin1 NOT NULL,
					INDEX(type),
				subtype VARCHAR(24) CHARSET latin1 NOT NULL,
					INDEX(subtype),
				detail VARCHAR(24) CHARSET latin1 NOT NULL,
					INDEX(detail),
				published DATETIME NOT NULL,
					INDEX(published),
				created DATETIME NOT NULL,
				modified DATETIME NOT NULL,
				slug VARCHAR(96) CHARSET latin1 NOT NULL,
					INDEX(slug),
				title VARCHAR(96) NOT NULL,
				body MEDIUMTEXT NOT NULL,
				revision BIGINT UNSIGNED NOT NULL,
				extra BIGINT UNSIGNED NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_NODE_LINK;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				a BIGINT UNSIGNED NOT NULL,
					INDEX(a),
				b BIGINT UNSIGNED NOT NULL,
					INDEX(b),
				type VARCHAR(24) CHARSET latin1 NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


// Create/Upgrade Table //
$table = CMW_TABLE_NODE_META;
if ( !isset($table_list) || isset($table_list[$table]) ) {
	DoInit($table);
	switch ($version) {
	case 0:
		$ok = DoCreate( $table,
			"CREATE TABLE ".$table." (
				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
					UNIQUE,
				node BIGINT UNSIGNED NOT NULL,
					INDEX(node),
				`key` VARCHAR(32) CHARSET latin1 NOT NULL,
				value TEXT NOT NULL
			)".DEFAULT_CS_ENGINE.";");
		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
	};
	DoExit($table);
}


//// Create/Upgrade Table //
//$table = CMW_TABLE_SCHEDULE_TIMESPAN;
//if ( !isset($table_list) || isset($table_list[$table]) ) {
//	DoInit($table);
//	switch ($version) {
//	case 0:
//		$ok = DoCreate( $table,
//			"CREATE TABLE ".$table." (
//				id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT 
//					UNIQUE,
//				node BIGINT UNSIGNED NOT NULL,
//					INDEX(node),
//				`key` VARCHAR(32) CHARSET latin1 NOT NULL,
//				value TEXT NOT NULL
//			)".DEFAULT_CS_ENGINE.";");
//		if (!$ok) break; $version++; if (isset($max_version) && $version == $max_version) break;
//	};
//	DoExit($table);
//}
//
//
//// CMW_TABLE_SCHEDULE_SUBSCRIPTION


print "Done.\n";
