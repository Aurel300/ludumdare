'use strict';

var gulp = require('gulp');
var util = require('gulp-util');
var debug = require('gulp-debug');
var file = require('gulp-file');
var wrapper = require('gulp-wrapper');
var concat = require('gulp-concat');
var rename = require('gulp-rename');
var uglify = require('gulp-uglify');

var DEST = '../';
var OUTFILE = 'core.js';

// These files go first (i.e. order matters)
var OrderedList = [
	'../src/star.js',
];

// These files will be omitted from the wildcard search
var IgnoreList = [
];

// Build file list.
var Files = OrderedList.concat("../src/*.js").concat(IgnoreList.map(function(e){return '!' + e;}));

gulp.task('default', function() {
	util.log("glob: " + Files);

	return gulp.src(Files)
		.pipe(wrapper({
			header:"/* ${filename} */\n"
		}))
		.pipe(file("_dummy_header_file.js",
			"/* Generated by GULP (src/gulpfile.js) */\n/* DO NOT EDIT!! */\n")
		)
		.pipe(debug({title:"debug (src):"}))
		.pipe(concat(OUTFILE))
		.pipe(debug({title:"debug (concat):"}))
		
		// This will output the non-minified version
		.pipe(gulp.dest(DEST))
		
		// This will minify and rename to foo.min.js
		.pipe(uglify())
		.pipe(rename({ extname: '.min.js' }))
		.pipe(gulp.dest(DEST));
});
