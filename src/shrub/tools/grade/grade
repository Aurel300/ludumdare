#!/usr/bin/env php
<?php
const CONFIG_PATH = "../../";
const SHRUB_PATH = "../../src/";

include_once __DIR__."/".CONFIG_PATH."config.php";
require_once __DIR__."/".SHRUB_PATH."core/cli_root.php";	// Confirm CLI, Require ROOT
require_once __DIR__."/".SHRUB_PATH."core/db.php";
require_once __DIR__."/".SHRUB_PATH."core/core.php";
require_once __DIR__."/".SHRUB_PATH."constants.php";		// For the SH_TABLE constants. run gen.sh if not up-to-date.
require_once __DIR__."/".SHRUB_PATH."global/global.php";

require_once __DIR__."/".SHRUB_PATH."node/node.php";
require_once __DIR__."/".SHRUB_PATH."grade/grade.php";

if ( count($argv) < 2 ) {
	echo "Usage: ".$argv[0]." [command]\n";
	echo "\n";
	echo "  score grade-name #     - Score items by grade-name (grade-01) given threshold # (17)\n";
	echo "\n";
	die;
}

global_Load();

$ARG_COMMAND = array_shift($argv);

$EVENT_ID = isset($SH['ludumdare-event']) ? intval($SH['ludumdare-event']) : 0;
if ( !$EVENT_ID ) {
	echo "'ludumdare-event' is zero or not set ($EVENT_ID)\n";
	die;
}

$COMMAND = array_shift($argv);
if ( $COMMAND === "score" ) {
	print "\n*** WARNING ***\n\n";
	print "You are about to generate scores.\n";
	print "\nAre you sure [type 'YES']? ";
	flush();
	$input = trim(fgets(STDIN));
	if ( $input != "YES" ) {
		print "Aborting...\n";
		exit(1);
	}
	
	echo "Fetching Event... ";
	
	$EVENT = nodeComplete_GetById($EVENT_ID);
	
	if ( !$EVENT ) {
		echo "Problem loading event: $EVENT\n";
		exit(1);
	}
	echo $EVENT['name']."\n";
	
	$GRADES = [];
	foreach ( $EVENT['meta'] as $key => &$value ) {
		$part = explode('-', $key);
		if ( count($part) == 2 && $part[0] == 'grade' ) {
			$GRADES[] = $key;
		}
	}
	
	echo "Found Grades: \n";
	foreach ( $GRADES as &$grade ) {
		echo $grade."\n";
	}
	
	echo "Fetching List of Nodes...";
	$NODES = nodeFeed_GetByMethod(['parent'], $EVENT_ID, 'item', 'game', ['jam','compo','craft'], null, null, null );
	
	echo count($NODES)." total.\n";

	// TODO: Count grades
	
	print "Ready to start?\n";
	print "\nAre you sure [type 'YES']? ";
	flush();
	$input = trim(fgets(STDIN));
	if ( $input != "YES" ) {
		print "Aborting...\n";
		exit(1);
	}
	
	$RESULT = [];
	foreach ( $NODES as &$node_id ) {
//		$grades = 
	}
	
	
}
else {
	echo "Error: Unknown command \"$COMMAND\"\n";
	exit(1);
}
